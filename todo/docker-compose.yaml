version: '3.9'

services:
  frontend:
    image: sermalenk/skypro-front:lesson-36
    container_name: frontend
    ports:
      - "80:80"
    depends_on:
      - api

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    env_file: .env
    environment:
      POSTGRES_HOST: db
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"


  migrations:
    build:
      context: .
    container_name: migrations
    env_file: .env
    depends_on:
      api:
        condition: service_started
      pgdb:
        condition: service_healthy
    command: sh -c "python ./manage.py migrate"

  pgdb:
    # Использование готового образа postgres
    image: postgres:15.2
    # Задание переменных окружения для контейнера с postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always
     # Задание имени контейнера для сервиса pgdb
    container_name: pgdb
     # Связывание тома с директорией в контейнере для сохранения данных postgres
    volumes:
      - pgdb_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SQL_DB_USER} -d ${SQL_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 15




volumes:
  pgdb_data:
  frontend:
  
